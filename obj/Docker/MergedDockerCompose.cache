name: dockercompose1849272376330757781
services:
  fbs.api:
    build:
      context: C:\Users\Alien Ware\RiderProjects\PRN231_PhuongLHK_Group_Asm_FootballCourtBooking
      dockerfile: FBS.API/Dockerfile
    depends_on:
      sqlserverdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__FootballCourtBooking: Server=sqlserverdb;Database=FootballCourtBooking;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
    image: fbsapi
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 8080
        published: "8085"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Alien Ware\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Alien Ware\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserverdb:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      MSSQL_USER: sa
      SA_PASSWORD: YourStrong!Passw0rd
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 1433
        published: "1436"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
networks:
  backend:
    name: dockercompose1849272376330757781_backend
    driver: bridge
volumes:
  sqlserverdata:
    name: dockercompose1849272376330757781_sqlserverdata